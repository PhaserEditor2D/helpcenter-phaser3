const VER = "$ver$";

const assets = $assets$;

const CACHE_KEY = "phasereditor2d.helpcenter-" + VER;

self.addEventListener('install', async (event) => {

	self.skipWaiting();

	event.waitUntil(
		caches.open(CACHE_KEY)
			.then(cache => {

				console.log('Opened cache ' + CACHE_KEY);

				return cache.addAll(assets);
			}));
});

const channel = new BroadcastChannel('sw-messages');

self.addEventListener('activate', event => {

	event.waitUntil(
		caches.keys().then(cacheNames => {

			console.log("Current cache version " + CACHE_KEY);

			const promises = [];
			
			for (const cacheName of cacheNames) {

				console.log("Testing cache version " + cacheName);

				if (cacheName !== CACHE_KEY) {

					console.log("Deleting cache version " + cacheName);

					promises.push(caches.delete(cacheName));
				}
			}

			if (promises.length > 0) {

				channel.postMessage({
					method: "update-installed",
					ver: VER
				});
			}

			return Promise.all(promises);
		})
	)
});

self.addEventListener('fetch', function (event) {

	event.respondWith(

		caches.match(event.request)
			.then(function (response) {

				if (response) {

					return response;
				}

				console.log("fetch from network: " + event.request.url);

				return fetch(event.request);
			})
	);
});